{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/xzheng013/Documents/experiments/react-comm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/components/checkout-item/checkout-item.container.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n {\\n   cartItems @client\\n }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation AddItemToCart($item: Item!) {\\n    addItemToCart(item: $item) @client\\n   \\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport CheckoutItem from './checkout-item.component';\nimport { removeItemFromCart, clearItemFromCart } from '../../graphql/cart.utils';\nconst ADD_ITEM_TO_CART = gql(_templateObject());\nconst GET_CART_ITEMS = gql(_templateObject2());\n\nconst CheckoutItemContainer = props => React.createElement(Mutation, {\n  mutation: ADD_ITEM_TO_CART,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, addItemToCart => React.createElement(CheckoutItem, Object.assign({}, props, {\n  addItem: item => addItemToCart({\n    variables: {\n      item\n    }\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n})));\n\nexport default CheckoutItemContainer;","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/components/checkout-item/checkout-item.container.jsx"],"names":["React","Query","Mutation","gql","CheckoutItem","removeItemFromCart","clearItemFromCart","ADD_ITEM_TO_CART","GET_CART_ITEMS","CheckoutItemContainer","props","addItemToCart","item","variables"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,0BAAtD;AAEA,MAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;AAMA,MAAMK,cAAc,GAAGL,GAAH,oBAApB;;AAMA,MAAMM,qBAAqB,GAAGC,KAAK,IACjC,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAEH,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKI,aAAD,IACE,oBAAC,YAAD,oBACMD,KADN;AAEE,EAAA,OAAO,EAAEE,IAAI,IAAID,aAAa,CAAC;AAAEE,IAAAA,SAAS,EAAE;AAAED,MAAAA;AAAF;AAAb,GAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHN,CADF;;AAaA,eAAeH,qBAAf","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport CheckoutItem from './checkout-item.component';\nimport { removeItemFromCart, clearItemFromCart } from '../../graphql/cart.utils';\n\nconst ADD_ITEM_TO_CART = gql`\n  mutation AddItemToCart($item: Item!) {\n    addItemToCart(item: $item) @client\n   \n  }\n`;\nconst GET_CART_ITEMS = gql`\n {\n   cartItems @client\n }\n`;\n\nconst CheckoutItemContainer = props => (\n  <Mutation mutation={ADD_ITEM_TO_CART}>\n    {\n      (addItemToCart) => (\n        <CheckoutItem\n          {...props}\n          addItem={item => addItemToCart({ variables: { item } })}\n        />\n      )\n    }\n  </Mutation>\n);\n\nexport default CheckoutItemContainer;"]},"metadata":{},"sourceType":"module"}