{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/xzheng013/Documents/experiments/react-comm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/pages/collection/collection.container.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n query getCollectionByTitle($title: String!) {\\n   getCollectionByTitle(title: $title) {\\n     id\\n     title\\n     items {\\n      id\\n      name\\n      price\\n      imageUrl\\n     }\\n     \\n   }\\n }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Spinner from '../../components/spinner/spinner.component';\nimport CollectionPage from './collection.component';\nconst GET_COLLECTION_BY_TITLE = gql(_templateObject());\n\nconst CollectionContainer = ({\n  match\n}) => React.createElement(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: {\n    title: match.params.collectionId\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, ({\n  loading,\n  data\n}) => {\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  const getCollectionByTitle = data.getCollectionByTitle;\n  return React.createElement(CollectionPage, {\n    collection: getCollectionByTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n});\n\nexport default CollectionContainer;","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/pages/collection/collection.container.jsx"],"names":["React","Query","gql","Spinner","CollectionPage","GET_COLLECTION_BY_TITLE","CollectionContainer","match","title","params","collectionId","loading","data","getCollectionByTitle"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,MAAMC,uBAAuB,GAAGH,GAAH,mBAA7B;;AAgBA,MAAMI,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC1B,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,uBAAd;AAAuC,EAAA,SAAS,EAAE;AAAEG,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACrB,MAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AADQ,QAEbE,oBAFa,GAEYD,IAFZ,CAEbC,oBAFa;AAGrB,SAAO,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEA,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CANL,CADF;;AAYA,eAAeP,mBAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport Spinner from '../../components/spinner/spinner.component';\nimport CollectionPage from './collection.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n query getCollectionByTitle($title: String!) {\n   getCollectionByTitle(title: $title) {\n     id\n     title\n     items {\n      id\n      name\n      price\n      imageUrl\n     }\n     \n   }\n }\n`;\n\nconst CollectionContainer = ({ match }) => (\n  <Query query={GET_COLLECTION_BY_TITLE} variables={{ title: match.params.collectionId }}>\n    {\n      ({ loading, data }) => {\n        if (loading) return <Spinner />;\n        const { getCollectionByTitle } = data;\n        return <CollectionPage collection={getCollectionByTitle} />;\n      }\n    }\n  </Query>\n);\n\nexport default CollectionContainer;"]},"metadata":{},"sourceType":"module"}