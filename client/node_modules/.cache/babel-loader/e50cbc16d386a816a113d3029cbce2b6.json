{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/xzheng013/Documents/experiments/react-comm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/components/collections-overview/collection-overview.container.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  collections {\\n    id\\n    title\\n    items {\\n      id\\n      name\\n      price\\n      imageUrl\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport Spinner from '../spinner/spinner.component';\nimport CollectionsOverview from './collections-overview.component';\nconst GET_COLLECTIONS = gql(_templateObject());\n\nconst CollectionsOverviewContainer = () => React.createElement(Query, {\n  query: GET_COLLECTIONS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}); // const mapStateToProps = createStructuredSelector({\n//   isLoading: selectIsCollectionFetching\n// });\n// const CollectionsOverviewContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner\n// )(CollectionsOverview);\n\n\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/components/collections-overview/collection-overview.container.jsx"],"names":["React","Query","gql","connect","createStructuredSelector","compose","selectIsCollectionFetching","Spinner","CollectionsOverview","GET_COLLECTIONS","CollectionsOverviewContainer"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AAEA,MAAMC,eAAe,GAAGP,GAAH,mBAArB;;AAeA,MAAMQ,4BAA4B,GAAG,MACnC,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,eAAeC,4BAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport Spinner from '../spinner/spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst GET_COLLECTIONS = gql`\n{\n  collections {\n    id\n    title\n    items {\n      id\n      name\n      price\n      imageUrl\n    }\n  }\n}\n`;\n\nconst CollectionsOverviewContainer = () => (\n  <Query query={GET_COLLECTIONS}></Query>\n);\n\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: selectIsCollectionFetching\n// });\n\n// const CollectionsOverviewContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner\n// )(CollectionsOverview);\nexport default CollectionsOverviewContainer;"]},"metadata":{},"sourceType":"module"}