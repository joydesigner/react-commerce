{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/xzheng013/Documents/experiments/react-comm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n      getCollectionsByTitle(title: \\\"hats\\\") {\\n        id\\n        title\\n        items {\\n          id\\n          name\\n          price\\n          imageUrl\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHpptLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './index.css';\nß; // import * as serviceWorker from './serviceWorker';\n\nconst httpLink = createHpptLink({\n  uri: 'https//crwn-clothing.com'\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(res => console.log(res));\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","PersistGate","ApolloProvider","createHpptLink","InMemoryCache","ApolloClient","gql","store","persistor","App","ß","httpLink","uri","cache","client","link","query","then","res","console","log","render","document","getElementById"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,aAAP;AAAsBC,CAAC,C,CACvB;;AACA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,KAAK,GAAG,IAAIT,aAAJ,EAAd;AAEA,MAAMU,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,IAAI,EAAEJ,QADwB;AAE9BE,EAAAA;AAF8B,CAAjB,CAAf;AAKAC,MAAM,CAACE,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAEV,GAAF;AADM,CAAb,EAeGW,IAfH,CAeQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAff;AAiBApB,QAAQ,CAACuB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF,EAUEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAcE;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHpptLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\n\nimport './index.css'; ß\n// import * as serviceWorker from './serviceWorker';\nconst httpLink = createHpptLink({\n  uri: 'https//crwn-clothing.com'\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\n\nclient.query({\n  query: gql`\n    {\n      getCollectionsByTitle(title: \"hats\") {\n        id\n        title\n        items {\n          id\n          name\n          price\n          imageUrl\n        }\n      }\n    }\n  `\n}).then(res => console.log(res));\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  // serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}