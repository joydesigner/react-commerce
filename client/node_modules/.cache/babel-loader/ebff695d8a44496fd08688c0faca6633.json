{"ast":null,"code":"var _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport CartItem from '../cart-item/cart-item.component';\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessageContainer, CheckoutButton } from './cart-dropdown.styles';\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropdownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})) : React.createElement(EmptyMessageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your cart is empty.\")), React.createElement(CheckoutButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","withRouter","connect","createStructuredSelector","selectCartItems","toggleCartHidden","CartItem","CartDropdownContainer","CartItemsContainer","EmptyMessageContainer","CheckoutButton","CartDropDown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,qBAApD,EAA2EC,cAA3E,QAAiG,wBAAjG;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,SAAS,CAACG,MAAV,GACEH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CADF,GAGI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALR,CADF,EASE,oBAAC,cAAD;AAAgB,EAAA,OAAO,EAAE,MAAM;AAC7BJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CADF;;AAiBA,MAAMe,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CS,EAAAA,SAAS,EAAER;AADoC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACC,OAAO,CAACkB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport CartItem from '../cart-item/cart-item.component';\n\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessageContainer, CheckoutButton } from './cart-dropdown.styles';\n\nconst CartDropDown = ({ cartItems, history, dispatch }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {\n        cartItems.length ? (\n          cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n        ) : (\n            <EmptyMessageContainer>Your cart is empty.</EmptyMessageContainer>\n          )}\n    </CartItemsContainer>\n    <CheckoutButton onClick={() => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    }}>GO TO CHECKOUT</CheckoutButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));"]},"metadata":{},"sourceType":"module"}