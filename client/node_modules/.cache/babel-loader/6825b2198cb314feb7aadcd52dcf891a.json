{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/xzheng013/Documents/experiments/react-comm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xzheng013/Documents/experiments/react-comm/client/src/components/checkout-item/checkout-item.container.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n {\\n   cartItems @client\\n }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation AddItemToCart($item: Item!) {\\n    addItemToCart(item: $item) @client\\n   \\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport CheckoutItem from './checkout-item.component';\nimport { Graphql } from '../../graphql/resolvers';\nimport { removeItemFromCart, clearItemFromCart } from '../../graphql/cart.utils';\nconst ADD_ITEM_TO_CART = gql(_templateObject());\nconst GET_CART_ITEMS = gql(_templateObject2());\n\nconst CheckoutItemContainer = props => React.createElement(Mutation, {\n  mutation: ADD_ITEM_TO_CART,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, addItemToCart => React.createElement(Query, {\n  query: GET_CART_ITEMS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, ({\n  data: {\n    cartItems\n  }\n}) => {\n  return React.createElement(CheckoutItem, Object.assign({}, props, {\n    addItem: item => addItemToCart({\n      variables: {\n        item\n      }\n    }),\n    removeItem: item => removeItemFromCart(cartItems, {\n      item\n    }),\n    clearItem: item => clearItemFromCart(cartItems, {\n      item\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}));\n\nexport default CheckoutItemContainer;","map":{"version":3,"sources":["/Users/xzheng013/Documents/experiments/react-comm/client/src/components/checkout-item/checkout-item.container.jsx"],"names":["React","Query","Mutation","gql","CheckoutItem","Graphql","removeItemFromCart","clearItemFromCart","ADD_ITEM_TO_CART","GET_CART_ITEMS","CheckoutItemContainer","props","addItemToCart","data","cartItems","item","variables"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,0BAAtD;AAEA,MAAMC,gBAAgB,GAAGL,GAAH,mBAAtB;AAMA,MAAMM,cAAc,GAAGN,GAAH,oBAApB;;AAMA,MAAMO,qBAAqB,GAAGC,KAAK,IACjC,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAEH,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKI,aAAD,IACE,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEH,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,CAAC;AAAEI,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAR,CAAD,KAA6B;AAC3B,SAAQ,oBAAC,YAAD,oBACFH,KADE;AAEN,IAAA,OAAO,EAAEI,IAAI,IAAIH,aAAa,CAAC;AAAEI,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAFxB;AAGN,IAAA,UAAU,EAAEA,IAAI,IAAIT,kBAAkB,CAACQ,SAAD,EAAY;AAAEC,MAAAA;AAAF,KAAZ,CAHhC;AAIN,IAAA,SAAS,EAAEA,IAAI,IAAIR,iBAAiB,CAACO,SAAD,EAAY;AAAEC,MAAAA;AAAF,KAAZ,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AAMD,CATL,CAHN,CADF;;AAuBA,eAAeL,qBAAf","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nimport CheckoutItem from './checkout-item.component';\nimport { Graphql } from '../../graphql/resolvers';\nimport { removeItemFromCart, clearItemFromCart } from '../../graphql/cart.utils';\n\nconst ADD_ITEM_TO_CART = gql`\n  mutation AddItemToCart($item: Item!) {\n    addItemToCart(item: $item) @client\n   \n  }\n`;\nconst GET_CART_ITEMS = gql`\n {\n   cartItems @client\n }\n`;\n\nconst CheckoutItemContainer = props => (\n  <Mutation mutation={ADD_ITEM_TO_CART}>\n    {\n      (addItemToCart) => (\n        <Query query={GET_CART_ITEMS}>\n          {\n            ({ data: { cartItems } }) => {\n              return (<CheckoutItem\n                {...props}\n                addItem={item => addItemToCart({ variables: { item } })}\n                removeItem={item => removeItemFromCart(cartItems, { item })}\n                clearItem={item => clearItemFromCart(cartItems, { item })}\n              />)\n            }\n          }\n\n        </Query>\n      )\n\n    }\n  </Mutation>\n);\n\nexport default CheckoutItemContainer;"]},"metadata":{},"sourceType":"module"}